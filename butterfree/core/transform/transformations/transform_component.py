"""Transform Abstract Class."""

from abc import ABC, abstractmethod
from typing import List

from pyspark.sql import DataFrame


class TransformComponent(ABC):
    """Defines an abstract class for Transform entities.

    Attributes:
        parent: parent transform component.
    """

    def __init__(self):
        self._parent = None

    @property
    def parent(self) -> "TransformComponent":
        """Parent transform component."""
        return self._parent

    @parent.setter
    def parent(self, parent):
        self._parent = parent

    @property
    @abstractmethod
    def output_columns(self) -> List[str]:
        """Columns generated by the transformation."""

    @abstractmethod
    def transform(self, dataframe: DataFrame) -> DataFrame:
        """Performs a transformation to the feature pipeline.

        Args:
            dataframe: input dataframe.

        Returns:
            Transformed dataframe.
        """
