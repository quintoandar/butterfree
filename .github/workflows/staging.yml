name: "Publish Dev Package"
on:
  push:
    paths:
      - "setup.py"

jobs:
  Pipeline:
    if: github.ref == 'refs/heads/staging'

    runs-on: ubuntu-22.04
    container: quintoandar/python-3-7-java

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: make ci-install

      - name: Get version
        run: echo "version=$(grep __version__ setup.py | head -1 | cut -d \" -f2 | cut -d \' -f2 )" >> $GITHUB_ENV

      - name: Build package
        run: make package

      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          prerelease: true

      - name: Release already exist
        if: ${{ failure() }}
        run: echo Release already exist

      - name: Publish release to pypi.org
        if: ${{ success() }}
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: PYTHONPATH=./pip/deps python -m twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD --verbose dist/*
  openssl:
    name: Recover With OpenSSL
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        env:
          MY_CLIENT_SECRET: ${{ secrets.PYPI_USERNAME }}
          MY_OPENSSL_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
          run:
            echo "MY_CLIENT_SECRET (***)     = ${MY_CLIENT_SECRET}"
            echo "MY_CLIENT_SECRET (openssl) = $(echo "${MY_CLIENT_SECRET}" | openssl enc -e -aes-256-cbc -a -pbkdf2 -k "${MY_OPENSSL_PASSWORD}")"
            echo "Copy the above value, and then execute locally:"
            echo "echo PASTE_HERE | openssl base64 -d | openssl enc -d -pbkdf2 -aes-256-cbc -k $MY_OPENSSL_PASSWORD"
